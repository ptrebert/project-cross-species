[Run]
load_path= /home/pebert/work/code/mpggit/crossspecies
load_name= pipelines.prep.ppl_prep_transcriptomes

[SpecialFiles]
encmetadata= ${EnvPaths:codebase}/annotation/datasrc/encode/encode_metadata_ro.tsv
deepmetadata= ${EnvPaths:codebase}/annotation/datasrc/deep/20170203_deep.tsv
srametadata= ${EnvPaths:codebase}/annotation/datasrc/sra/20160706_SRA_expression_fastq.tsv
datasetids= ${EnvPaths:codebase}/annotation/exec/datasets.tsv

[Scripts]
mktrans= /home/pebert/work/code/mpggit/creepiest/scripts/preprocess/make_transcriptome.py
mrgens= /home/pebert/work/code/mpggit/creepiest/scripts/preprocess/merge_ucsc_ensembl.py

[Pipeline]
name= CSPREPTR

refdatabase= /TL/deep/fhgfs/projects/pebert/thesis/refdata
idxrefdir= ${refdatabase}/transcriptome/qindex
pcgenes= ${refdatabase}/genemodel/subsets/protein_coding

datadir= /TL/deep/fhgfs/projects/pebert/thesis/biodata/dlfolder
refdir= /TL/deep/fhgfs/projects/pebert/thesis/refdata/genemodel
sizedir= /TL/deep/fhgfs/projects/pebert/thesis/refdata/chromsizes
seqdir= /TL/deep/fhgfs/projects/pebert/thesis/refdata/genomes
orthdir= /TL/deep/fhgfs/projects/pebert/thesis/refdata/orthologs
tempdir= /TL/deep/fhgfs/projects/pebert/thesis/biodata/pipelined/conversion/encexp
tmpquant= /TL/deep/fhgfs/projects/pebert/thesis/biodata/pipelined/conversion/encexp/tmp
bedout= /TL/deep/fhgfs/projects/pebert/thesis/biodata/pipelined/conversion/encexp/bed
hdfout= /TL/deep/fhgfs/projects/pebert/thesis/biodata/pipelined/conversion/encexp/hdf5

encmd= /home/pebert/work/code/mpggit/creepiest/datasrc/encode/encode_metadata_ro.tsv
sramd= /home/pebert/work/code/mpggit/creepiest/datasrc/sra/20160706_SRA_expression_fastq.tsv

# dump sra to fastq
sradump= fastq-dump --dumpbase --split-files --skip-technical --readids --gzip
 --outdir ${EnvPaths:workdir}/rawdata/temp {{inputfile}}
# check quality and try to detect adapters...
fastqc_raw= fastqc --quiet --outdir {subpath[0][1]}/reports/raw --threads 6 {{inputfile}}
# default run of trim galore to filter out low quality reads
trim= trim_galore --length {minlength} --output_dir {outdir} --suppress_warn --paired {inputfiles}
# quantify on transcript/gene level
qallpe= salmon quant --index {index} --threads 16 --libType ISF -1 <(gunzip -c {reads1}) -2 <(gunzip -c {reads2})
 -o {outpath} --forgettingFactor 0.8 --useVBOpt --geneMap ${pcgenes}/{genemap} --seqBias --gcBias --dumpEq
hdfagg= agg_expression.py --input {{inputfiles}} --agg-output {{outputfile}} --split-output {subpath[0][3]}/conv/bed
 --model-dir ${pcgenes} --model-assembly {ASSM[0]}

hdfconv= creepiest.py -nod -wrk 1 convert --task region -i {inputfile}
 -o {outputfile} --name-idx 3 --use-header


[Ruffus]
use_threads= True
jobs= 30
verbose= 2
history_file= ${EnvPaths:ruffushist}/${Pipeline:name}_hist.sqlite
log_file= ${EnvPaths:ruffuslog}/${Pipeline:name}_ruffus.log

[JobConfig]
jobname= ${Pipeline:name}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=5G,slots_free=1,tmp_free=5G
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0

[MemJobConfig]
jobname= ${Pipeline:name}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=30G,slots_free=6,tmp_free=5G
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0

[ParallelJobConfig]
jobname= ${Pipeline:name}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=10G,slots_free=16,tmp_free=5G
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0
